name: AI Code Review (Improved)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    # 最小権限の原則: 必要最小限の権限のみ
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 差分取得のため全履歴が必要
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Get PR diff
        run: |
          # PR の差分を取得
          git diff origin/${{ github.base_ref }}...${{ github.sha }} > pr_diff.txt
          
          # 差分ファイルのサイズチェック（大きすぎる場合は警告）
          file_size=$(wc -c < pr_diff.txt)
          echo "Diff file size: $file_size bytes"
          
          if [ $file_size -gt 50000 ]; then
            echo "⚠️ Warning: Diff file is large ($file_size bytes). Review might be truncated."
          fi
          
          # 空の差分をチェック
          if [ $file_size -eq 0 ]; then
            echo "No code changes detected in this PR."
            echo "no_changes=true" >> $GITHUB_ENV
          fi
      
      - name: Run AI Code Review
        if: env.no_changes != 'true'
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
          REPO_NAME: ${{ github.repository }}
        run: |
          # 静的スクリプトを実行
          python .github/scripts/review.py pr_diff.txt \
            --pr-number "$PR_NUMBER" \
            --repo-name "$REPO_NAME" \
            --post-comment \
            --output review_output.txt
      
      - name: Handle missing API key
        if: env.no_changes != 'true' && failure()
        run: |
          echo "❌ AI Code Review failed. This might be due to:"
          echo "1. Missing GEMINI_API_KEY secret"
          echo "2. API rate limits"
          echo "3. Network connectivity issues"
          echo ""
          echo "To set up AI code review:"
          echo "1. Get a Gemini API key from https://ai.google.dev/"
          echo "2. Add it as a repository secret named 'GEMINI_API_KEY'"
          echo "3. Ensure the secret is accessible to this workflow"
      
      - name: Upload review artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-review-artifacts
          path: |
            pr_diff.txt
            review_output.txt
          retention-days: 7
      
      - name: Post no-changes comment
        if: env.no_changes == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = `# 🤖 AI Code Review

            📝 **No code changes detected**

            This pull request doesn't contain any code changes that require review. The changes might be limited to:
            - Documentation updates
            - Configuration files
            - Non-code assets

            If you expected code changes to be reviewed, please check that the files are properly committed and the PR includes the intended modifications.

            ---
            *🤖 This message was generated automatically by AI Code Review*

            *Generated with [Google Gemini](https://ai.google.dev/) • [Claude Code](https://claude.ai/code)*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # セキュリティチェック: 差分に機密情報が含まれていないかチェック
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for secrets in PR diff
        run: |
          # PR差分から機密情報パターンを検索
          git diff origin/${{ github.base_ref }}...${{ github.sha }} > pr_diff.txt
          
          # 検出パターン
          patterns=(
            "password\s*[=:]\s*['\"][^'\"]*['\"]"
            "api_key\s*[=:]\s*['\"][^'\"]*['\"]"
            "secret\s*[=:]\s*['\"][^'\"]*['\"]"
            "token\s*[=:]\s*['\"][^'\"]*['\"]"
            "-----BEGIN [A-Z ]*PRIVATE KEY-----"
            "sk-[a-zA-Z0-9]{32,}"  # API keys like sk-...
          )
          
          found_secrets=false
          
          for pattern in "${patterns[@]}"; do
            if grep -iE "$pattern" pr_diff.txt; then
              echo "⚠️ Potential secret detected: $pattern"
              found_secrets=true
            fi
          done
          
          if [ "$found_secrets" = true ]; then
            echo "security_warning=true" >> $GITHUB_ENV
          fi
      
      - name: Post security warning
        if: env.security_warning == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = `# 🔒 Security Alert

            ⚠️ **Potential secrets detected in this PR**

            The automated security scan found patterns that might indicate exposed secrets or credentials in your code changes. Please review the following:

            ## Common Issues:
            - Hardcoded passwords or API keys
            - Private keys or certificates
            - Authentication tokens
            - Database credentials

            ## Recommended Actions:
            1. **Remove any hardcoded secrets** from your code
            2. **Use environment variables** for sensitive configuration
            3. **Add secrets to .gitignore** if they exist in files
            4. **Rotate any exposed credentials** immediately
            5. **Consider using a secrets management service**

            ## If this is a false positive:
            - The detected pattern might be a placeholder or example
            - Please verify that no real credentials are exposed

            ---
            *🔒 This security scan was performed automatically*

            *For more information about security best practices, see our [Security Guide](docs/security.md)*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });